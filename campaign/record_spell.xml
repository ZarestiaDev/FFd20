<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the LICENSE.md file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="spelldesc">
		<frame>recordsheet</frame>
		<placement>
			<size width="550" height="450" />
		</placement>
		<sizelimits>
			<minimum width="550" height="450" />
			<dynamic />
		</sizelimits>
		<minimize>minimized_reference</minimize>
		<sharable />
		<script file="common/scripts/record_window.lua" />
		<sheetdata>
			<sub_record_header name="header">
				<class>spelldesc_header</class>
			</sub_record_header>

			<frame_record_content name="contentframe" />
			<subwindow_record name="content">
				<class>spelldesc_stats</class>
				<activate />
			</subwindow_record>
			<scrollbar_record>
				<target>content</target>
			</scrollbar_record>
			
			<resize_recordsheet />
			<close_recordsheet />
		</sheetdata>
	</windowclass>

	<windowclass name="spelldesc_header">
		<margins control="0,0,0,7" />
		<script file="common/scripts/record_header.lua" />
		<sheetdata>
			<link_record_header name="link" />

			<anchor_record_header_right />
			<icon_record_locked />
			<button_record_locked />

			<string_record_name name="name" />
			<label_recordtype name="recordtype_label" />
		</sheetdata>
	</windowclass>
	
	<windowclass name="spelldesc_stats">
		<margins control="0,0,0,15" />
		<script>
			function onInit()
				update();
			end

			function update()
				local bReadOnly = WindowManager.getReadOnlyState(getDatabaseNode());
				school.update(bReadOnly);
				level.update(bReadOnly);
				components.update(bReadOnly);
				castingtime.update(bReadOnly);
				range.update(bReadOnly);
				effect.update(bReadOnly);
				duration.update(bReadOnly);
				save.update(bReadOnly);
				sr.update(bReadOnly);
				description.update(bReadOnly);
				
				action_label_add.setVisible(not bReadOnly);
				action_label_add_cast.setVisible(not bReadOnly);
				action_label_add_damage.setVisible(not bReadOnly);
				action_label_add_heal.setVisible(not bReadOnly);
				action_label_add_effect.setVisible(not bReadOnly);
				action_label_clear.setVisible(not bReadOnly);
				action_label_parse.setVisible(not bReadOnly);
				actions_iedit.setVisible(not bReadOnly);

				if bReadOnly then
					actions_iedit.setValue(0);
				end
			end

			function addParsedActions()
				local nodeSpell = getDatabaseNode();
				SpellManager.parseSpell(nodeSpell);
			end
		</script>
		<sheetdata>
			<anchor_column name="columnanchor" />

			<label_column name="school_label">
				<static textres="spell_label_school" />
			</label_column>
			<string_columnh name="school">
				<delaykeyupdate />
			</string_columnh>
			
			<label_column name="level_label">
				<static textres="level" />
			</label_column>
			<string_columnh name="level">
				<delaykeyupdate />
			</string_columnh>
			
			<label_column name="components_label">
				<static textres="spell_label_components" />
			</label_column>
			<string_columnh name="components">
				<default>
					<textres>spell_text_components</textres>
				</default>
			</string_columnh>

			<label_column name="castingtime_label">
				<static textres="spell_label_casttime" />
			</label_column>
			<string_columnh name="castingtime" />

			<label_column name="range_label">
				<static textres="spell_label_range" />
			</label_column>
			<string_columnh name="range" />

			<label_column name="effect_label">
				<static textres="spell_label_effecttarget" />
			</label_column>
			<string_columnh name="effect" />

			<label_column name="duration_label">
				<static textres="spell_label_duration" />
			</label_column>
			<string_columnh name="duration" />

			<label_column name="save_label">
				<static textres="spell_label_save" />
			</label_column>
			<string_columnh name="save" />

			<label_column name="sr_label">
				<static textres="spell_label_sr" />
			</label_column>
			<string_columnh name="sr" />

			<ft_columnh name="description" />

			<label_column name="action_label_add">
				<anchored>
					<top offset="8" />
				</anchored>
				<static textres="actionlist_add" />
			</label_column>
			
			<button_text name="action_label_add_cast">
				<anchored to="description" width="65" height="16">
					<top anchor="bottom" offset="10" />
					<left parent="action_label_add" anchor="right" offset="10" />
				</anchored>
				<state textres="actionlist_add_cast" />
					<script>
						function onButtonPress()
							PowerManagerCore.createPowerAction(window, "cast");
						end
					</script>
			</button_text>
			
			<button_text name="action_label_add_damage">
				<anchored to="description" width="60" height="16">
					<top anchor="bottom" offset="10" />
					<left parent="action_label_add_cast" anchor="right" offset="15" />
				</anchored>
				<state textres="actionlist_add_damage" />
					<script>
						function onButtonPress()
							PowerManagerCore.createPowerAction(window, "damage");
						end
					</script>
			</button_text>
			
			<button_text name="action_label_add_heal">
				<anchored to="description" width="60" height="16">
					<top anchor="bottom" offset="10" />
					<left parent="action_label_add_damage" anchor="right" offset="15" />
				</anchored>
				<state textres="actionlist_add_heal" />
					<script>
						function onButtonPress()
							PowerManagerCore.createPowerAction(window, "heal");
						end
					</script>
			</button_text>
			
			<button_text name="action_label_add_effect">
				<anchored to="description" width="60" height="16">
					<top anchor="bottom" offset="10" />
					<left parent="action_label_add_heal" anchor="right" offset="15" />
				</anchored>
				<state textres="actionlist_add_effect" />
					<script>
						function onButtonPress()
							PowerManagerCore.createPowerAction(window, "effect");
						end
					</script>
			</button_text>
			
			<button_text name="action_label_clear">
				<anchored to="description" width="60" height="16">
					<top anchor="bottom" offset="10" />
					<right />
				</anchored>
				<state textres="actionlist_clear" />
					<script>
						function onButtonPress()
							local nodeActions = DB.createChild(window.getDatabaseNode(), "actions");
							for _,vAction in ipairs(DB.getChildList(nodeActions)) do
								vAction.delete();
							end
						end
					</script>
			</button_text>
			
			<button_text name="action_label_parse">
				<anchored to="description" width="60" height="16">
					<top anchor="bottom" offset="10" />
					<right parent="action_label_clear" anchor="left" offset="-15" />
				</anchored>
				<state textres="actionlist_parse" />
					<script>
						function onButtonPress()
							window.addParsedActions();
						end
					</script>
			</button_text>
		
			<header_column name="actionseffects_label">
				<anchored>
					<top parent="action_label_add_cast" />
				</anchored>
				<static textres="action_label_actions_effects"/>
				<center />
			</header_column>

			<button_iedit name="actions_iedit">
				<anchored to="actionseffects_label" position="righthigh" offset="-13,0" />
				<edittarget>actions</edittarget>
			</button_iedit>
			
			<list_poweraction name="actions">
				<anchored>
					<top parent="actionseffects_label" anchor="bottom" relation="relative" offset="5" />
					<left />
					<right />
				</anchored>
			</list_poweraction>
		</sheetdata>
	</windowclass>
</root>